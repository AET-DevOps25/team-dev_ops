name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
  pull_request:

concurrency: ci-${{ github.ref }}

jobs:
  generate-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name: spring-api
            path: services/spring-api
          - name: py-genai
            path: services/py-genai
          - name: py-topics
            path: services/py-topics
          - name: py-fetcher
            path: services/py-fetcher
          - name: web-client
            path: web-client

    steps:
      - uses: actions/checkout@v4

      - name: Lint OpenAPI
        run: npx @redocly/cli lint api/openapi.yaml

      - name: Install OpenAPI Generator CLI
        run: npm install -g @openapitools/openapi-generator-cli@latest

      - name: Generate code
        run: bash ./api/scripts/gen-all.sh
        shell: bash

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Gradle
        if: matrix.service.name == 'spring-api'
        uses: gradle/actions/setup-gradle@v3

      - name: Cache Maven / npm / pip
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ~/.cache/pip
            ~/.npm
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

      - name: Build & test
        working-directory: ${{ matrix.service.path }}
        run: |
          case ${{ matrix.service.name }} in
            spring-api) chmod +x gradlew && ./gradlew test ;;
            py-genai|py-topics|py-fetcher) pip install -r requirements.txt && pytest ;;
            web-client) npm ci && npm run test -- --watchAll=false ;;
          esac