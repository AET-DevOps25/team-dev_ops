name: Deploy Docker Images

on:
  workflow_dispatch:
    inputs:
      ec2_public_ip:
        description: 'Public IP of your EC2 instance'
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: aws
      url: 'https://client.${{ github.event.inputs.ec2_public_ip }}.nip.io'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: List files in workspace
        run: ls -la

      - name: Debug - Test EC2 connectivity
        run: |
          echo "Testing connectivity to EC2 instance: ${{ github.event.inputs.ec2_public_ip }}"
          ping -c 3 ${{ github.event.inputs.ec2_public_ip }} || echo "Ping failed"
          nc -zv ${{ github.event.inputs.ec2_public_ip }} 22 || echo "SSH port 22 is not accessible"

      - name: Copy Docker Compose File From Repo to VM Host
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ github.event.inputs.ec2_public_ip }}
          username: ${{ vars.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          source: "compose.aws.yml"
          target: /home/${{ vars.AWS_EC2_USER }}

      - name: SSH to VM and Create .env.prod
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ github.event.inputs.ec2_public_ip }}
          username: ${{ vars.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            rm .env.prod
            touch .env.prod
            echo "CLIENT_HOST=client.${{ github.event.inputs.ec2_public_ip }}.nip.io" >> .env.prod
            echo "SERVER_HOST=api.${{ github.event.inputs.ec2_public_ip }}.nip.io" >> .env.prod
            echo "PUBLIC_API_URL=https://api.${{ github.event.inputs.ec2_public_ip }}.nip.io/api" >> .env.prod

      - name: SSH to VM and Execute Docker-Compose Up
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ github.event.inputs.ec2_public_ip }}
          username: ${{ vars.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            echo "Logging into Docker registry..."
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            echo "Starting Docker Compose..."
            docker compose -f compose.aws.yml --env-file=.env.prod up --pull=always -d
