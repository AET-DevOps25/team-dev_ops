name: Deploy Docker Images

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: AWS
      # The URL here is informational. We will use secrets.EC2_PUBLIC_IP in the steps.
      url: 'https://your-ec2-ip-placeholder.nip.io' 
    steps:      
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Copy Docker Compose File From Repo to VM Host
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          source: "./compose.aws.yml"
          target: /home/${{ secrets.AWS_EC2_USER }}

      - name: SSH to VM and Create .env.prod
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            cd /home/${{ secrets.AWS_EC2_USER }}
            rm -f .env.prod
            touch .env.prod
            echo "CLIENT_HOST=client.${{ secrets.EC2_PUBLIC_IP }}.nip.io" >> .env.prod
            echo "SERVER_HOST=api.${{ secrets.EC2_PUBLIC_IP }}.nip.io" >> .env.prod
            echo "PUBLIC_API_URL=https://api.${{ secrets.EC2_PUBLIC_IP }}.nip.io/api" >> .env.prod

      - name: SSH to VM and Execute Docker-Compose Up
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            cd /home/${{ secrets.AWS_EC2_USER }}
            echo "Logging into Docker registry..."
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            echo "Starting Docker Compose..."
            docker compose -f compose.aws.yml --env-file=.env.prod up --pull=always -d