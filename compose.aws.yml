services:
  reverse-proxy:
    image: traefik:v3.4
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=admin@tum.de"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt

  # Frontend service
  client:
    image: ghcr.io/aet-devops25/team-dev_ops/client:latest
    environment:
      - PUBLIC_API_URL=${PUBLIC_API_URL}
    depends_on:
      - growth-calculation
      - content-ingestion
      - trend-dashboard
      - monitoring
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client.rule=Host(`${CLIENT_HOST}`)"
      - "traefik.http.services.client.loadbalancer.server.port=80"
      - "traefik.http.routers.client.entrypoints=websecure"
      - "traefik.http.routers.client.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.client-compress.compress=true"
      - "traefik.http.routers.client.middlewares=client-compress"
      - "traefik.http.routers.client.priority=1"

  # Backend services
  growth-calculation:
    image: ghcr.io/aet-devops25/team-dev_ops/growth-calculation:latest
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.growth-calculation.rule=Host(`${SERVER_HOST}`) && PathPrefix(`/api/growth`)"
      - "traefik.http.services.growth-calculation.loadbalancer.server.port=8082"
      - "traefik.http.routers.growth-calculation.entrypoints=websecure"
      - "traefik.http.routers.growth-calculation.tls.certresolver=letsencrypt"
      - "traefik.http.routers.growth-calculation.priority=10"

  content-ingestion:
    image: ghcr.io/aet-devops25/team-dev_ops/content-ingestion:latest
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.content-ingestion.rule=Host(`${SERVER_HOST}`) && PathPrefix(`/api/content`)"
      - "traefik.http.services.content-ingestion.loadbalancer.server.port=8081"
      - "traefik.http.routers.content-ingestion.entrypoints=websecure"
      - "traefik.http.routers.content-ingestion.tls.certresolver=letsencrypt"
      - "traefik.http.routers.content-ingestion.priority=10"

  trend-dashboard:
    image: ghcr.io/aet-devops25/team-dev_ops/trend-dashboard:latest
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.trend-dashboard.rule=Host(`${SERVER_HOST}`) && PathPrefix(`/api/trends`)"
      - "traefik.http.services.trend-dashboard.loadbalancer.server.port=8083"
      - "traefik.http.routers.trend-dashboard.entrypoints=websecure"
      - "traefik.http.routers.trend-dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.trend-dashboard.priority=10"

  monitoring:
    image: ghcr.io/aet-devops25/team-dev_ops/monitoring:latest
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.monitoring.rule=Host(`${SERVER_HOST}`) && PathPrefix(`/api/monitoring`)"
      - "traefik.http.services.monitoring.loadbalancer.server.port=8084"
      - "traefik.http.routers.monitoring.entrypoints=websecure"
      - "traefik.http.routers.monitoring.tls.certresolver=letsencrypt"
      - "traefik.http.routers.monitoring.priority=10"

  # Fallback API router for any unmatched /api requests
  api-fallback:
    image: ghcr.io/aet-devops25/team-dev_ops/content-ingestion:latest
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-fallback.rule=Host(`${SERVER_HOST}`) && PathPrefix(`/api`)"
      - "traefik.http.services.api-fallback.loadbalancer.server.port=8081"
      - "traefik.http.routers.api-fallback.entrypoints=websecure"
      - "traefik.http.routers.api-fallback.tls.certresolver=letsencrypt"
      - "traefik.http.routers.api-fallback.priority=1"

networks:
  default:
    name: niche-explorer-network